from playwright.sync_api import sync_playwright
from telegram_bot import send_telegram_message
import time

try:
    THRESHOLD = float(input("üî¢ –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (‚ÇΩ): ").replace(",", "."))
except ValueError:
    print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 71.50")
    exit()

CHECK_INTERVAL = 60  # —Å–µ–∫—É–Ω–¥
URL = "https://www.bybit.com/ru-RU/fiat/trade/otc/buy/USDT/RUB"

def start_browser():
    p = sync_playwright().start()
    browser = p.chromium.launch_persistent_context(
        user_data_dir="user-data-bybit",
        headless=False,
        viewport={"width": 1280, "height": 800},
        user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"
    )
    page = browser.pages[0] if browser.pages else browser.new_page()
    page.goto(URL, wait_until="domcontentloaded", timeout=30000)
    return page

def check_offer(page, last_sent_id):
    offers = []

    def handle_response(response):
        if "/x-api/fiat/otc/item/online" in response.url and response.request.method == "POST":
            try:
                json_data = response.json()
                print("[DEBUG] –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Bybit")
                items = json_data.get("result", {}).get("items", [])
                if items:
                    offers.extend(items)
                    print(f"[DEBUG] –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {len(items)}")
            except Exception as e:
                print(f"[ERROR] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")

    page.on("response", handle_response)

    page.reload(wait_until="domcontentloaded", timeout=30000)
    page.wait_for_timeout(5000)

    if offers:
        best = min(offers, key=lambda x: float(x.get("price", 999999)))
        if float(best["price"]) < THRESHOLD and best["id"] != last_sent_id:
            message = (
                f"üìâ <b>–ö—É—Ä—Å –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–∞!</b>\n"
                f"<code>{best['price']} ‚ÇΩ/USDT</code>\n"
                f"üë§ {best['nickName']} (ID {best['accountId']})\n"
                f"üîó <a href='{URL}'>–û—Ç–∫—Ä—ã—Ç—å</a>"
            )
            send_telegram_message(message)
            return best["id"]
    return last_sent_id

def main():
    print("[INFO] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω...")
    page = start_browser()
    last_id = None

    while True:
        try:
            last_id = check_offer(page, last_id)
        except Exception as e:
            print(f"[ERROR] {e}")
        time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    main()

# This code monitors the Bybit OTC market for USDT/RUB offers and sends Telegram notifications
# when the price drops below a specified threshold.
# It uses Playwright to interact with the Bybit website and fetch offer data.
# The script runs indefinitely, checking for new offers at regular intervals.
# Make sure to have the necessary dependencies installed and configured.
# Ensure you have the Telegram bot set up to send messages.
# Adjust the THRESHOLD and CHECK_INTERVAL as needed for your use case.

# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ä—ã–Ω–æ–∫ P2P Bybit –ø–æ –ø–∞—Ä–µ USDT/RUB –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram,
# –µ—Å–ª–∏ —Ü–µ–Ω–∞ –ø–∞–¥–∞–µ—Ç –Ω–∏–∂–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞.
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Playwright –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Bybit –∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö.
# –°–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è—è –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã.
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Telegram-–±–æ—Ç.
# –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è THRESHOLD (–ø–æ—Ä–æ–≥ —Ü–µ–Ω—ã) –∏ CHECK_INTERVAL (–∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏).

